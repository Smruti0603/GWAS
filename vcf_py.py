# -*- coding: utf-8 -*-
"""VCF.py.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rAjM4uP-O-wfPgrLyFH9QTWrxTdHnSpf
"""

with open("/home/newuser/Downloads/7000.vcf" , mode = 'r') as vcf:
    print(vcf.read())

pip install scikit-allel

import allel
import pandas as pd

pip install pandas

callset = allel.read_vcf('/media/newuser/Transcend/all.vcf')

sorted(callset.keys())

callset['variants/ALT']

callset['variants/ID']

callset['variants/POS']

callset['variants/REF']

DF = allel.vcf_to_dataframe('/media/newuser/Transcend/all.vcf' )

DF

DF = allel.vcf_to_dataframe('/media/newuser/Transcend/all.vcf' , fields = [ 'POS' , 'REF' , 'ALT_1' ])

DF

lis=list(DF["POS"][:100])
print(lis[:100])

p=list(DF["REF"])
q=list(DF["ALT_1"])

import h5py, numpy
import pandas as pd
import numpy as np

f = h5py.File('/home/newuser/Downloads/4.hdf5','r')

x=list(f['positions'][:100])
print(x)



y=[]
# //store position in common
z=[]
# //store atgc
print(len(lis))
for i in range(len(lis)):
    if lis[i] in x:
        y.append(lis[i])
        if(q[i]!="A" and q[i]!="T"and q[i]!="G" and q[i]!="C"):
            z.append(p[i])
        else:
            z.append(q[i])
#     print(p[i],q[i],z)
print(z)

print(len(z))

w=h5py.File('/media/newuser/Transcend/snps.hdf5','r')
w

w.keys()

k=w["snps"][:10]
k

y=h5py.File('/media/newuser/Transcend/kin.hdf5','r')
y.keys()

k=y["n_snps"]

k

k=y["kinship"]

k

